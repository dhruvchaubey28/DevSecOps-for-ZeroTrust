name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: zerotrust-app

jobs:
  security-scanning:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run SAST (Static Application Security Testing)
      uses: actions/checkout@v3
      
    - name: Semgrep SAST Scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: p/security-audit

    - name: Checkov Infrastructure Scan
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: ./
        framework: terraform,kubernetes,all

  container-security:
    runs-on: ubuntu-latest
    needs: security-scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build container image
      run: |
        cp app/index-secure.html app/index.html
        docker build -f app/Dockerfile.secure -t $IMAGE_NAME:secure ./app

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: $IMAGE_NAME:secure
        format: sarif
        output: trivy-results.sarif
        severity: CRITICAL,HIGH,MEDIUM

    - name: Upload Trivy scan results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: trivy-results.sarif

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'zerotrust-devsecops'
        path: '.'
        format: 'HTML'
        args: >
          --out reports/
          --scan ./
          --disableYarnAudit
          --disableNodeAudit

    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports/

  deploy:
    runs-on: ubuntu-latest
    needs: [container-security, dependency-check]
    
    steps:
    - name: Security Gate Check
      run: |
        echo "🔒 All security scans completed!"
        echo "✅ SAST: Passed"
        echo "✅ Container Scan: Passed" 
        echo "✅ Dependency Check: Passed"
        echo "🚀 Proceeding with deployment..."
        
    - name: Deploy to Environment
      run: |
        echo "📦 Deploying secure application..."
        echo "🛡️ Zero Trust controls will be applied in Phase 3"