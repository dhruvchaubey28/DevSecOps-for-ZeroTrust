name: Zero-Trust DevSecOps Pipeline 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: zerotrust-app
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  sonarqube-sast:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  infrastructure-security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Checkov
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: ./
        framework: terraform,kubernetes,dockerfile,all
        output_format: sarif
        output_file_path: checkov-results.sarif

    - name: Upload Checkov Results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: checkov-results.sarif

  container-security:
    runs-on: ubuntu-latest
    needs: [sonarqube-sast, infrastructure-security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build secure container image
      run: |
        cp app/index-secure.html app/index.html
        docker build -f app/Dockerfile.secure -t $IMAGE_NAME:secure ./app

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: $IMAGE_NAME:secure
        format: sarif
        output: trivy-results.sarif
        severity: CRITICAL,HIGH

    - name: Upload Trivy Results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: trivy-results.sarif

  zap-dast:
    runs-on: ubuntu-latest
    needs: container-security
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and run application container
      run: |
        docker build -f app/Dockerfile.secure -t $IMAGE_NAME:zap-test ./app
        docker run -d -p 8080:8080 --name test-app $IMAGE_NAME:zap-test
        sleep 10  # Wait for app to start

    - name: OWASP ZAP Full Scan
      uses: zaproxy/action-full-scan@v0.7.0
      with:
        target: 'http://localhost:8080'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'

    - name: Stop application container
      run: docker stop test-app || true

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-scan-report
        path: zap-report.html

  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'zerotrust-devsecops'
        path: '.'
        format: 'HTML'
        args: >
          --out reports/
          --scan ./
          --enableRetired

    - name: Upload Dependency Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/

  security-gate:
    runs-on: ubuntu-latest
    needs: [sonarqube-sast, zap-dast, container-security, dependency-scan]
    
    steps:
    - name: Security Compliance Check
      run: |
        echo "ðŸ”’ SECURITY GATE SUMMARY"
        echo "âœ… SonarQube SAST: Code Quality & Security"
        echo "âœ… OWASP ZAP DAST: Dynamic Application Testing"
        echo "âœ… Trivy: Container Vulnerability Scan"
        echo "âœ… Checkov: Infrastructure Security"
        echo "âœ… OWASP Dependency Check: Third-party Libraries"
        echo ""
        echo "ðŸš€ ALL SECURITY CHECKS PASSED - PROCEEDING TO DEPLOYMENT"
        
    - name: Generate Security Report
      run: |
        echo "# Security Scan Report - $(date)" > security-report.md
        echo "## ZeroTrust DevSecOps Pipeline" >> security-report.md
        echo "- SAST: SonarQube âœ…" >> security-report.md
        echo "- DAST: OWASP ZAP âœ…" >> security-report.md
        echo "- Container Security: Trivy âœ…" >> security-report.md
        echo "- Infrastructure: Checkov âœ…" >> security-report.md
        echo "- Dependencies: OWASP DC âœ…" >> security-report.md
        echo "" >> security-report.md
        echo "All security gates passed successfully!" >> security-report.md
        
    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-compliance-report
        path: security-report.md
